language: python
sudo: true
dist: bionic
services:
  - docker
cache: pip
before_cache:
  - chown -R travis:travis $HOME/.cache/pip
stages:
  - build-containers
  - bump-version
  - deploy
before_install:
  - env
_install: &_install
  - chmod +x build.sh
_login: &_login
  - chmod +x build.sh
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" docker.io

matrix:
  fast_finish: true
  include:
    - stage: build-containers
      if: commit_message !~ /^Bump version/
      name: "Build base-python 3.6"
      python: 3.6
      script:
        - ./build.sh --python "3.6" -js --no-dl --version travis-build
      install: *_install
    - stage: build-containers
      if: commit_message !~ /^Bump version/
      name: "Build base-python 3.7"
      python: 3.7
      script:
        - ./build.sh --python "3.7" -js  --no-dl --version travis-build
      install: *_install
    - stage: build-containers
      if: commit_message !~ /^Bump version/
      name: "Build data-sciece CUDA 10.2"
      python: 3.7
      script:
        - ./build.sh --python "3.7" -js --version travis-build -tf --pytorch -cu 10.2
      install: *_install
    - stage: build-containers
      if: commit_message !~ /^Bump version/
      name: "Build data-sciece CUDA 10.1"
      python: 3.7
      script:
        - ./build.sh --python "3.7" -js --version travis-build -tf --pytorch --cuda 10.1
      install: *_install
    - stage: bump-version
      if: branch == master AND type != pull_request AND commit_message !~ /^Bump version/
      name: "Bump the version"
      install:
        - git config --global user.name "Fragile Bot"
        - git config --global user.email "bot@fragile.tech"
        - pip install bump2version
      script:
        - set -e
        - git pull --no-edit origin master
        - version_file=version.txt
        - current_version=$(grep __version__ $version_file | cut -d\" -f2)
        - bumpversion --tag --current-version $current_version --commit patch $version_file
        - git remote add fragile-bot-remote https://fragile-bot:${DOCKERFILES_GITHUB_TOKEN}@github.com/$TRAVIS_REPO_SLUG
        - git push --tags fragile-bot-remote HEAD:master
        - set +e
    - stage: deploy
      if: tag =~ .*
      name: "Push base-py36 to Docker hub"
      install: *_login
      script:
        - ./build.sh --python "3.6" -js --no-dl --version $TRAVIS_TAG
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=base-py3.6
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      if: tag =~ .*
      name: "Push base-py37 to Docker hub"
      install: *_login
      script:
        - ./build.sh --python "3.7" -js --no-dl --version $TRAVIS_TAG
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=base-py3.7
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      if: tag =~ .*
      name: "Push basic CUDA 10.1 to Docker hub"
      install: *_login
      script:
        - ./build.sh --python "3.7" -js --version $TRAVIS_TAG -tf --pytorch --cuda 10.1 --only-cuda
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=cuda-10.1
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      if: tag =~ .*
      name: "Push basic CUDA 10.2 to Docker hub"
      install: *_login
      script:
        - ./build.sh --python "3.7" -js --version $TRAVIS_TAG -tf --pytorch --cuda 10.2 --only-cuda
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=cuda-10.2
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      if: tag =~ .*
      name: "Push deep learning CUDA 10.1 to Docker hub"
      install: *_login
      script:
        - ./build.sh --python "3.7" -js --version $TRAVIS_TAG -tf --pytorch --cuda 10.1 --container-name deep-learning
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=deep-learning-py3.7-cuda10.1
        skip_cleanup: true
        on:
          tags: true
    - stage: deploy
      if: tag =~ .*
      name: "Push deep learning CUDA 10.2 to Docker hub"
      install: *_login
      script:
        - ./build.sh  --python "3.7" -js --version $TRAVIS_TAG -tf --pytorch --cuda 10.2 --container-name deep-learning
      deploy:
        provider: script
        script: make docker-push VERSION=$TRAVIS_TAG DOCKER_TAG=deep-learning-py3.7-cuda10.2
        skip_cleanup: true
        on:
          tags: true

notifications:
  email: false